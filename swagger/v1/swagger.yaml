swagger: '2.0'
info:
  title: CRM
  description: Welcome to the our Client Relationship Manager API! To use this API
    please follow the documentation below. All required headers & request body fields
    are provided inside each endpoint description and parameters. Please do not send
    a body unless specifically instructed to do so. Otherwise your request will not
    be processed. Please do not use real people's full name and contact info. This
    is an example project to showcase programming skills and this will not be monitored.
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: 127.0.0.1:3000
paths:
  "/signup":
    post:
      summary: Create a new user account with this endpoint. An email, username, name,
        and password are all required. A new session is automatically created and
        the Authorization credentials are sent in the headers of the response
      tags:
      - Signup
      consumes:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            user:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
          required:
          - name
          - email
          - username
          - password
      responses:
        '200':
          description: successful
        '422':
          description: Unprocessable Entity
  "/login":
    post:
      summary: |-
        Upon successful login this endpoint returns an object with the user's basic account info along with
               a bearer token in its response header. Use the bearer token for all future requests during that login session
      tags:
      - Login/Logout
      consumes:
      - application/json
      parameters:
      - name: user
        in: body
        schema:
          type: object
          properties:
            user:
              properties:
                email:
                  type: string
                password:
                  format: string
          required:
          - email
          - password
      responses:
        '200':
          description: Logged in sucessfully.
        '401':
          description: Invalid email or password. Please check your spelling and cases
            or reset your password
        '404':
          description: No account found with email <USER EMAIL>. Please signup a new
            account to log in
        '403':
          description: Unauthorized request. Check your authorization credentials
  "/logout":
    delete:
      summary: Logs a user out of their current session
      tags:
      - Login/Logout
      consumes:
      - application/json
      parameters:
      - name: Authorization
        in: header
        required: true
      responses:
        '200':
          description: Logged out sucessfully
        '401':
          description: Couldn't find an active session.